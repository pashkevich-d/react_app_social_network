{"version":3,"sources":["API/api.js","components/Users/users.module.css","assets/images/user-logo.jpg","assets/images/810.svg","components/Navbar/Navbar.module.css","serviceWorker.js","redux/sidebar-reducer.js","utils/object-helpers.js","redux/users-reducer.js","redux/auth-reducer.js","redux/app-reducer.js","redux/redux-store.js","components/Navbar/Navbar.jsx","components/common/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.js","redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","hoc/withSuspense.js","App.js","index.js","components/common/FormsControls/FormControls.js","components/common/Preloader/Preloader.js","components/common/FormsControls/FormControls.module.css","utils/validators/validatots.js","components/common/Paginator/paginator.module.css","components/Header/Header.module.css","redux/profile-reducer.js","redux/dialogs-reducer.js"],"names":["instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","profileAPI","getStatus","updateStatus","status","put","authAPI","me","login","email","password","rememberMe","logout","module","exports","Boolean","window","location","hostname","match","initialState","sidebarReducer","state","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","users","totalUsersCount","isFetching","followingInProgress","acceptFollow","type","acceptUnfollow","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","async","resultCode","usersReducer","action","followed","filter","id","isAuth","setAuthUserData","payload","getAuthUserData","authReducer","initialised","appReducer","reducers","combineReducers","profile","profileReducer","messages","dialogsReducer","sidebar","usersPage","auth","form","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","Navbar","className","s","nav","item","to","activeClassName","active","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","styles","pagination","onClick","p","cn","selectedPage","pageNumber","key","e","User","user","usersPhoto","src","photos","small","userPhoto","disabled","some","name","Users","props","getUsersList","createSelector","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","this","Preloader","React","Component","connect","bind","totalCount","Header","header","loginBlock","HeaderContainer","maxLengthCreator20","maxLengthCreator","LoginReduxForm","reduxForm","handleSubmit","error","onSubmit","createField","requiredField","Input","style","formError","message","length","stopSubmit","_error","formData","withSuspense","Suspense","fallback","DialogsContainer","lazy","ProfileContainer","App","initialise","path","render","withRouter","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","FormControl","input","meta","touched","child","hasError","formControl","children","Textarea","restProps","placeholder","validators","component","text","validate","preloader","value","maxLength","posts","likesCount","setStatus","getUserProfile","addPostActionCreator","newPostText","newPost","postId","dialogs","sendMessageCreator","newMessage","newMessageText"],"mappings":"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","file":"static/js/main.b8ff8b6a.chunk.js","sourcesContent":["import * as axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"be0eaa64-1e0e-4014-b7b6-1b03b3e6c5a0\"\r\n    }\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    },\r\n\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n\r\n    getProfile(userId) {\r\n        return profileAPI.getProfile(userId)\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId);\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/` + userId)\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, {\r\n            status: status\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`);\r\n    },\r\n    login(email, password, rememberMe = false) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe});\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`);\r\n    }\r\n}\r\n\r\n// export const getUsers = (currentPage = 1, pageSize = 10) => {\r\n//     return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n//     .then(response => {\r\n//         return response.data;\r\n//     });\r\n// }","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersPhoto\":\"users_usersPhoto__1OvrL\",\"selectedPage\":\"users_selectedPage__NERKS\",\"pagination\":\"users_pagination__i6HmL\"};","module.exports = __webpack_public_path__ + \"static/media/user-logo.7829623e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/810.eded90f3.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__32Dic\",\"item\":\"Navbar_item__3XO02\",\"active\":\"Navbar_active__PhNBS\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","let initialState = {}\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {\r\n                ...u,\r\n                ...newObjProps\r\n            }\r\n        }\r\n        return u\r\n    })\r\n}","import {\r\n    usersAPI\r\n} from '../API/api';\r\nimport {\r\n    updateObjectInArray\r\n} from '../utils/object-helpers';\r\n\r\nconst FOLLOW = \"FOLLOW\";\r\nconst UNFOLLOW = \"UNFOLLOW\";\r\nconst SET_USERS = \"SET_USERS\";\r\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\r\nconst SET_TOTAL_USERS_COUNT = \"SET_TOTAL_USERS_COUNT\";\r\nconst TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\";\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = \"TOGGLE_IS_FOLLOWING_PROGRESS\";\r\n\r\nlet initialState = {\r\n    users: [\r\n        // {id: 1, photoURL: \"https://langery.ru/upload/iblock/5cb/5cb2ae043187adcf7db4ea0b85d261c8.jpg\", followed: true, fullName: \"Dmitry\", status: \"I'm creator of this social network\", location: { city: \"Minsk\", photoURL: \"https://langery.ru/upload/iblock/5cb/5cb2ae043187adcf7db4ea0b85d261c8.jpg\", country: \"Belarus\" }}, \r\n        // {id: 2, photoURL: \"https://langery.ru/upload/iblock/5cb/5cb2ae043187adcf7db4ea0b85d261c8.jpg\", followed: false, fullName: \"Masha\", status: \"I'm just Masha\", location: { city: \"Gomel\", country: \"Belarus\" }}, \r\n        // {id: 3, photoURL: \"https://langery.ru/upload/iblock/5cb/5cb2ae043187adcf7db4ea0b85d261c8.jpg\", followed: true, fullName: \"Sveta\", status: \"I'm Masha's best friend\", location: { city: \"Kiev\", country: \"Ukraine\" }}, \r\n        // {id: 4, photoURL: \"https://langery.ru/upload/iblock/5cb/5cb2ae043187adcf7db4ea0b85d261c8.jpg\", followed: false, fullName: \"Kirill\", status: \"I'm like Dmitry but just Kirill\", location: { city: \"Vitebsk\", country: \"Belarus\" }}\r\n    ],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: [2, 3]\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                //users: [...state.users],\r\n                users: updateObjectInArray(state.users, action.userId, 'id', {\r\n                    followed: true\r\n                })\r\n            }\r\n\r\n            case UNFOLLOW:\r\n                return {\r\n                    ...state,\r\n                    //users: [...state.users],\r\n                    users: updateObjectInArray(state.users, action.userId, 'id', {\r\n                        followed: false\r\n                    })\r\n                }\r\n\r\n                case SET_USERS: {\r\n                    return {\r\n                        ...state,\r\n                        users: action.users\r\n                    }\r\n                }\r\n\r\n                case SET_CURRENT_PAGE: {\r\n                    return {\r\n                        ...state,\r\n                        currentPage: action.currentPage\r\n                    }\r\n                }\r\n\r\n                case SET_TOTAL_USERS_COUNT: {\r\n                    return {\r\n                        ...state,\r\n                        totalUsersCount: action.totalUsersCount\r\n                    }\r\n                }\r\n\r\n                case TOGGLE_IS_FETCHING: {\r\n                    return {\r\n                        ...state,\r\n                        isFetching: action.isFetching\r\n                    }\r\n                }\r\n\r\n                case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n                    return {\r\n                        ...state,\r\n                        followingInProgress: action.isFetching ? [...state.followingInProgress, action.userId] : [state.followingInProgress.filter(id => id !== action.userId)]\r\n                    }\r\n                }\r\n\r\n                default:\r\n                    return state;\r\n    }\r\n};\r\n\r\nexport const acceptFollow = (userId) => ({\r\n    type: FOLLOW,\r\n    userId\r\n})\r\nexport const acceptUnfollow = (userId) => ({\r\n    type: UNFOLLOW,\r\n    userId\r\n})\r\nexport const setUsers = (users) => ({\r\n    type: SET_USERS,\r\n    users\r\n})\r\nexport const setCurrentPage = (currentPage) => ({\r\n    type: SET_CURRENT_PAGE,\r\n    currentPage\r\n})\r\nexport const setTotalUsersCount = (totalUsersCount) => ({\r\n    type: SET_TOTAL_USERS_COUNT,\r\n    totalUsersCount\r\n})\r\nexport const toggleIsFetching = (isFetching) => ({\r\n    type: TOGGLE_IS_FETCHING,\r\n    isFetching\r\n})\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n})\r\n\r\nexport const getUsers = (currentPage, pageSize) => {\r\n\r\n    return async (dispatch) => {\r\n        dispatch(setCurrentPage(currentPage));\r\n        dispatch(toggleIsFetching(true));\r\n\r\n        let data = await usersAPI.getUsers(currentPage, pageSize);\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n    }\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n\r\n    let response = await apiMethod(userId);\r\n    if (response.data.resultCode === 0)\r\n        dispatch(actionCreator(userId));\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), acceptFollow);\r\n    }\r\n}\r\n\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), acceptUnfollow);\r\n    }\r\n}\r\n\r\nexport default usersReducer;","import {\r\n    authAPI\r\n} from \"../API/api\";\r\nimport {\r\n    stopSubmit\r\n} from 'redux-form';\r\n\r\nconst SET_USER_DATA = 'auth/SET_USER_DATA';\r\n\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n    // isFetching: false\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n\r\n            default:\r\n                return state;\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n    type: SET_USER_DATA,\r\n    payload: {\r\n        userId,\r\n        email,\r\n        login,\r\n        isAuth\r\n    }\r\n});\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.me();\r\n        if (response.data.resultCode === 0) {\r\n            let {\r\n                id,\r\n                email,\r\n                login\r\n            } = response.data.data;\r\n            dispatch(setAuthUserData(id, email, login, true));\r\n        }\r\n}\r\n\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n\r\n    let response = await authAPI.login(email, password, rememberMe);\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(getAuthUserData())\r\n            } else {\r\n                let message =response.data.messages.length>0?response.data.messages[0]:'Some error';\r\n                dispatch(stopSubmit('login', {\r\n                    _error: message\r\n                }));\r\n            }\r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n   let response = await authAPI.logout();\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(setAuthUserData(null, null, null, false));\r\n            }\r\n}\r\n\r\nexport default authReducer;","import {\r\n    authAPI\r\n} from \"../API/api\";\r\nimport {\r\n    stopSubmit\r\n} from 'redux-form';\r\nimport {getAuthUserData} from './auth-reducer';\r\n\r\nconst SET_INITIALISED = 'SET_INITIALISED';\r\n\r\n\r\nlet initialState = {\r\n    initialised: false\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_INITIALISED:\r\n            return {\r\n                ...state,\r\n                initialised: true\r\n            }\r\n\r\n            default:\r\n                return state;\r\n    }\r\n}\r\n\r\nexport const initialisedSuccess = () => ({\r\n    type: SET_INITIALISED\r\n});\r\n\r\nexport const initialise = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    promise.then(()=>{\r\n        dispatch(initialisedSuccess());\r\n    })\r\n}\r\n\r\nexport default appReducer;","import {\r\n    createStore,\r\n    combineReducers,\r\n    applyMiddleware,\r\n    compose\r\n} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport {\r\n    reducer as formReducer\r\n} from 'redux-form';\r\nimport appReducer from './app-reducer';\r\n\r\nlet reducers = combineReducers({\r\n    profile: profileReducer,\r\n    messages: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n})\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\n// let store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nexport default store;","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className = {s.nav}>\r\n            <div className={s.item}><NavLink to=\"/profile\" activeClassName={s.active}>Profile</NavLink></div>\r\n            <div className={s.item}><NavLink to=\"/dialogs\" activeClassName={s.active}>Messages</NavLink></div>\r\n            <div className={s.item}><NavLink to=\"/users\" activeClassName={s.active}>Users</NavLink></div>\r\n            <div className={s.item}><a>News</a></div>\r\n            <div className={s.item}><a>Music</a></div>\r\n            <div className={s.item}><a>Settings</a></div>\r\n        </nav> \r\n    )\r\n}\r\n\r\nexport default Navbar;","import React, { useState } from \"react\";\r\nimport styles from \"./paginator.module.css\";\r\nimport cn from \"classnames\";\r\n\r\nlet Paginator = ({\r\n  totalItemsCount,\r\n  pageSize,\r\n  currentPage,\r\n  onPageChanged,\r\n  portionSize = 10\r\n}) => {\r\n  let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n  let pages = [];\r\n\r\n  for (let i = 1; i <= pagesCount; i++) {\r\n    pages.push(i);\r\n  }\r\n\r\n  let portionCount = Math.ceil(pagesCount / portionSize);\r\n  let [portionNumber, setPortionNumber] = useState(1);\r\n  let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n  let rightPortionPageNumber = portionNumber * portionSize;\r\n  return (\r\n    <div className={styles.pagination}>\r\n      {portionNumber > 1 && (\r\n        <button\r\n          onClick={() => {\r\n            setPortionNumber(portionNumber - 1);\r\n          }}\r\n        >\r\n          PREV\r\n        </button>\r\n      )}\r\n\r\n      {pages\r\n        .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n        .map(p => {\r\n          return (\r\n            <span\r\n              className={cn(\r\n                {\r\n                  [styles.selectedPage]: currentPage === p\r\n                },\r\n                styles.pageNumber\r\n              )}\r\n              key={p}\r\n              onClick={e => {\r\n                onPageChanged(p);\r\n              }}\r\n            >\r\n              {p}\r\n            </span>\r\n          );\r\n        })}\r\n      {portionCount > portionNumber && (\r\n        <button\r\n          onClick={() => {\r\n            setPortionNumber(portionNumber + 1);\r\n          }}\r\n        >\r\n          NEXT\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Paginator;\r\n\r\n// {pages.map(p => {\r\n//     return (\r\n//       <span\r\n//         className={currentPage === p && styles.selectedPage}\r\n//         onClick={e => {\r\n//           onPageChanged(p);\r\n//         }}\r\n//       >\r\n//         {p}\r\n//       </span>\r\n//     );\r\n//   })}\r\n// </div>\r\n// );\r\n// };\r\n","import React from 'react';\r\nimport styles from './users.module.css';\r\nimport userPhoto from '../../assets/images/user-logo.jpg';\r\nimport {NavLink} from 'react-router-dom';\r\nimport * as axios from 'axios';\r\nimport { usersAPI } from '../../API/api';\r\nimport Paginator from '../common/Paginator/Paginator';\r\n\r\nlet User = ({user, followingInProgress,unfollow, follow}) => {\r\n    return <div >\r\n            <span>\r\n                <div>\r\n                    <NavLink to={'/profile/' + user.id}>\r\n                    <img className={styles.usersPhoto} src={user.photos.small != null ? user.photos.small : userPhoto}/>\r\n                    </NavLink>\r\n                </div>\r\n                <div>\r\n                    { user.followed \r\n                    ? <button disabled={followingInProgress.some(id =>id === user.id)} \r\n                    onClick={() => {unfollow(user.id) } }> Unfollow</button> \r\n\r\n                    : <button disabled={followingInProgress.some(id =>id === user.id)} \r\n                    onClick={ () => { follow(user.id)} } > Follow</button>  }\r\n                    \r\n                </div>\r\n            </span>\r\n            <span>\r\n                <span>\r\n                    <div>{user.name}</div>\r\n                    <div>{user.status}</div>\r\n                </span>\r\n                <span>\r\n                    {/* <div>{u.location.country}</div> */}\r\n                    {/* <div>{u.location.city}</div> */}\r\n                </span>\r\n            </span>\r\n        </div>\r\n       \r\n}\r\n\r\nexport default User;","import React from 'react';\r\nimport Paginator from '../common/Paginator/Paginator';\r\nimport User from './User';\r\n\r\nlet Users = ({currentPage,onPageChanged,totalItemsCount,pageSize,users, ...props}) => {\r\n    return <div>\r\n        <Paginator currentPage={currentPage} totalItemsCount={totalItemsCount} pageSize={pageSize} onPageChanged={onPageChanged}/>\r\n    {users.map( u => <User \r\n        followingInProgress={props.followingInProgress} \r\n        user={u} \r\n        unfollow={props.unfollow}\r\n        follow={props.follow}\r\n    key={u.id}/> )}\r\n    </div>\r\n}\r\n\r\nexport default Users;","import {\r\n    createSelector\r\n} from 'reselect';\r\n\r\n\r\nconst getUsersSelector = (state) => {\r\n    return state.usersPage.users;\r\n}\r\n\r\n// export const getUsers = (state) => {\r\n//     return getUsers(state).filter(u => true);\r\n// }\r\n\r\nexport const getUsersList = createSelector(getUsersSelector, (users) => {\r\n    return users.filter(u => true);\r\n});\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage\r\n}\r\n\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching\r\n}\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress\r\n}","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  follow,\r\n  unfollow,\r\n  setUsers,\r\n  setCurrentPage,\r\n  setTotalUsersCount,\r\n  toggleIsFetching,\r\n  toggleFollowingProgress,\r\n  getUsers\r\n} from \"./../../redux/users-reducer\";\r\nimport * as axios from \"axios\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"./../common/Preloader/Preloader\";\r\nimport { usersAPI } from \"../../API/api\";\r\nimport {\r\n  getUsersList,\r\n  getPageSize,\r\n  getTotalUsersCount,\r\n  getCurrentPage,\r\n  getIsFetching,\r\n  getFollowingInProgress\r\n} from \"./../../redux/users-selectors\";\r\n\r\nclass UsersContainer extends React.Component {\r\n  componentDidMount() {\r\n    let { currentPage, pageSize } = this.props;\r\n    this.props.getUsers(currentPage, pageSize);\r\n    // this.props.toggleIsFetching(true);\r\n\r\n    // usersAPI.getUsers(this.props.currentPage, this.props.pageSize).then(data => {\r\n    //     this.props.toggleIsFetching(false);\r\n    //     this.props.setUsers(data.items);\r\n    //     this.props.setTotalUsersCount(data.totalCount);\r\n    // })\r\n  }\r\n\r\n  onPageChanged = pageNumber => {\r\n    let { pageSize } = this.props;\r\n    this.props.getUsers(pageNumber, pageSize);\r\n\r\n    // this.props.setCurrentPage(pageNumber);\r\n    // this.props.toggleIsFetching(true);\r\n    // usersAPI.getUsers(pageNumber, this.props.pageSize).then(data => {\r\n    //     this.props.toggleIsFetching(false);\r\n    //     this.props.setUsers(data.items)\r\n    // })\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.props.isFetching ? <Preloader /> : null}\r\n        <Users\r\n          totalItemsCount={this.props.totalItemsCount}\r\n          pageSize={this.props.pageSize}\r\n          currentPage={this.props.currentPage}\r\n          onPageChanged={this.onPageChanged}\r\n          users={this.props.users}\r\n          follow={this.props.follow}\r\n          unfollow={this.props.unfollow}\r\n          toggleFollowingProgress={this.props.toggleFollowingProgress}\r\n          followingInProgress={this.props.followingInProgress}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n// let mapStateToProps = (state) => {\r\n//     return {\r\n//         users: state.usersPage.users,\r\n//         pageSize: state.usersPage.pageSize,\r\n//         totalUsersCount: state.usersPage.totalUsersCount,\r\n//         currentPage: state.usersPage.currentPage,\r\n//         isFetching: state.usersPage.isFetching,\r\n//         followingInProgress: state.usersPage.followingInProgress\r\n//     }\r\n// }\r\n\r\nlet mapStateToProps = state => {\r\n  return {\r\n    // users: getUsersSelector(state),\r\n    users: getUsersList(state),\r\n    pageSize: getPageSize(state),\r\n    totalItemsCount: getTotalUsersCount(state),\r\n    currentPage: getCurrentPage(state),\r\n    isFetching: getIsFetching(state),\r\n    followingInProgress: getFollowingInProgress(state)\r\n  };\r\n};\r\n\r\nlet mapDispatchToProps = dispatch => {\r\n  return;\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  follow,\r\n  unfollow,\r\n  setCurrentPage,\r\n  toggleFollowingProgress,\r\n  getUsers\r\n})(UsersContainer);\r\n","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className = {s.header}>\r\n            <span>The first social network for frontend-developers</span>\r\n\r\n            <div className={s.loginBlock}>\r\n                {props.isAuth ? <div> {props.login} - <button onClick={props.logout}>Log out</button> </div>: <NavLink to={'/login'}>Login</NavLink>}\r\n                \r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport * as axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../../redux/auth-reducer\";\r\nimport { authAPI } from \"../../API/api\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n  \r\n\r\n  render() {\r\n    return <Header {...this.props} />;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuth: state.auth.isAuth,\r\n  login: state.auth.login\r\n});\r\n\r\nexport default connect(mapStateToProps, {  logout })(\r\n  HeaderContainer\r\n);\r\n","import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { Input, createField } from \"../common/FormsControls/FormControls\";\r\nimport {\r\n  requiredField,\r\n  maxLengthCreator\r\n} from \"../../utils/validators/validatots\";\r\nimport { connect } from \"react-redux\";\r\nimport { login } from \"../../redux/auth-reducer\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport style from \"../common/FormsControls/FormControls.module.css\";\r\n\r\nconst Login = props => {\r\n  const onSubmit = formData => {\r\n    props.login(formData.email, formData.password, formData.rememberMe);\r\n  };\r\n\r\n  if (props.isAuth) {\r\n    return <Redirect to={\"/profile\"} />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>LOGIN</h1>\r\n      <LoginReduxForm onSubmit={onSubmit} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst maxLengthCreator20 = maxLengthCreator(20);\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n        {createField(\"Email\", \"email\", [requiredField, maxLengthCreator20], Input)}\r\n        {createField(\"Password\", \"password\", [requiredField, maxLengthCreator20], Input, {type: \"password\"})}\r\n        {createField(null, \"rememberMe\", [], Input, {type: \"checkbox\"}, 'remember me')}\r\n        {/* <Field\r\n          placeholder={\"Email\"}\r\n          validate={[requiredField, maxLengthCreator20]}\r\n          name={\"email\"}\r\n          component={Input}\r\n        /> */}\r\n      {error && <div className={style.formError}>{error}</div>}\r\n      <div>\r\n        <button>Login</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst LoginReduxForm = reduxForm({\r\n  form: \"login\"\r\n})(LoginForm);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(Login);\r\n","import React from 'react';\r\nimport Preloader from '../components/common/Preloader/Preloader';\r\n\r\nexport const withSuspense = (Component) => {\r\n\r\n        return (props) => {\r\n            return <React.Suspense fallback = {\r\n                < div > < Preloader / > < /div>}><Component {...props}/ > < /React.Suspense>\r\n            }\r\n        }","import React from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar/Navbar';\nimport UsersContainer from './components/Users/UsersContainer';\nimport {\n  Route,\n  withRouter\n} from \"react-router-dom\";\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport Login from './components/Login/Login';\nimport {\n  connect\n} from \"react-redux\";\nimport {\n  compose\n} from 'redux';\nimport {\n  initialise\n} from './redux/app-reducer';\nimport Preloader from './components/common/Preloader/Preloader';\nimport {\n  withSuspense\n} from './hoc/withSuspense';\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'))\n\nclass App extends React.Component {\n\n  componentDidMount() {\n    this.props.initialise();\n  }\n\n  render() {\n    if (!this.props.initialised) {\n      return <Preloader / >\n    }\n    return ( <\n      div className = 'app-wrapper' >\n      <\n      HeaderContainer / >\n      <\n      Navbar / >\n      <\n      div className = 'app-wrapper-content' > {\n        /* <Route path='/dialogs' component={Dialogs} />\n                <Route path='/profile' component={Profile}/> */\n      } {\n        /* <Route path='/news' component={}> */\n      }\n\n      <\n      Route path = '/dialogs'\n      render = {\n        withSuspense(DialogsContainer)\n      }\n      /> <\n      Route path = '/profile/:userId?'\n      render = {\n        withSuspense(ProfileContainer)\n      }\n      /> <\n      Route path = '/users'\n      render = {\n        () => < UsersContainer / >\n      }\n      /> <\n      Route path = '/login'\n      render = {\n        () => < Login / >\n      }\n      /> < /\n      div > {\n        /* <Profile /> */\n      } <\n      /div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  initialised: state.app.initialised\n})\n\nexport default compose(withRouter, connect(mapStateToProps, {\n  initialise\n}))(\n  App\n);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport store from './redux/redux-store';\nimport App from './App';\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from 'react-redux';\n\n\n// let rerenderTree = (state) => {\n  \nReactDOM.render(  \n  <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>, document.getElementById('root'));\n// }\n\n\n\n// rerenderTree(store.getState());\n// rerenderTree();\n\n// store.subscribe(() => {\n//   rerenderTree();\n// });\n\n// store.subscribe(() => {\n//   let state = store.getState();\n//   rerenderTree(state);\n// });\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\r\nimport styles from './FormControls.module.css';\r\nimport { Field} from \"redux-form\";\r\n\r\nconst FormControl = ({input, meta: {touched, error}, child, ...props}) => {\r\n    const hasError = touched && error;\r\n    return ( \r\n        <div className={styles.formControl + ' ' + (hasError ? styles.error : ' ')}>\r\n        {props.children}\r\n    {hasError && <span>{error}</span> }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}> <textarea {...input} {...restProps} /> </FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}> <input {...input} {...restProps} /> </FormControl>\r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\") => (\r\n    <div>\r\n    <Field\r\n          placeholder={placeholder}\r\n          validate={validators}\r\n          name={name}\r\n          component={component}\r\n          {...props}\r\n        /> {text}\r\n    </div>\r\n)\r\n\r\n\r\n// export const Textarea = ({input, meta, ...props}) => {\r\n//     const hasError = meta.touched && meta.error;\r\n//     return ( \r\n//         <div className={styles.formControl + ' ' + (hasError ? styles.error : ' ')}>\r\n//         <textarea {...input} {...props} /> \r\n//     {hasError && <span>{meta.error}</span> }\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// export const Input = ({input, meta, ...props}) => {\r\n//     const hasError = meta.touched && meta.error;\r\n//     return ( \r\n//         <div className={styles.formControl + ' ' + (hasError ? styles.error : ' ')}>\r\n//         <input {...input} {...props} /> \r\n//     {hasError && <span>{meta.error}</span> }\r\n//         </div>\r\n//     )\r\n// }","import React from \"react\";\r\nimport preloader from '../../../assets/images/810.svg';\r\n\r\nlet Preloader = (props) => {\r\n    return <img src={preloader} />\r\n}\r\n\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__1l_f-\",\"error\":\"FormControls_error__24WVr\",\"formError\":\"FormControls_formError__3JdSb\"};","export const requiredField = value => {\r\n    if(value) return undefined;\r\n\r\n    return 'Field is required';\r\n    \r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => value => {\r\n    if(value.length >maxLength) return `Max length is ${maxLength} symbols`;\r\n\r\n    return undefined;\r\n    \r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedPage\":\"paginator_selectedPage__3RqE6\",\"pagination\":\"paginator_pagination__1xj_1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1VeoN\",\"loginBlock\":\"Header_loginBlock__3a1w0\"};","import {\r\n    usersAPI,\r\n    profileAPI\r\n} from \"../API/api\";\r\n\r\nconst ADD_POST = \"ADD-POST\";\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\n\r\nlet initialState = {\r\n    posts: [{\r\n            id: 1,\r\n            message: \"Мой первый пост\",\r\n            likesCount: 12\r\n        },\r\n        {\r\n            id: 2,\r\n            message: \"А вот и мой второй пост\",\r\n            likesCount: 4\r\n        }\r\n    ],\r\n    profile: null,\r\n    status: ''\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            let newPost = {\r\n                id: 3,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                    newPostText: ''\r\n            }\r\n            case SET_USER_PROFILE:\r\n                return {\r\n                    ...state,\r\n                    profile: action.profile\r\n                }\r\n                case SET_STATUS:\r\n                    return {\r\n                        ...state,\r\n                        status: action.status\r\n                    }\r\n                    default:\r\n                        return state;\r\n                case DELETE_POST: \r\n                    return {\r\n                        ...state,\r\n                        posts: state.posts.filter(p => p.id != action.postId)\r\n                    }\r\n    }\r\n};\r\n\r\nexport const setUserProfile = (profile) => ({\r\n    type: SET_USER_PROFILE,\r\n    profile\r\n})\r\n\r\nexport const setStatus = (status) => ({\r\n    type: SET_STATUS,\r\n    status\r\n})\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    let response = await usersAPI.getProfile(userId);\r\n        dispatch(setUserProfile(response.data));\r\n}\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId);\r\n            dispatch(setStatus(response.data));\r\n}\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status);\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(setStatus(status))\r\n            }\r\n}\r\n\r\nexport const addPostActionCreator = (newPostText) => {\r\n    return {\r\n        type: ADD_POST,\r\n        newPostText\r\n    }\r\n}\r\n\r\nexport const deletePost = (postId) => {\r\n    return {\r\n        type: DELETE_POST,\r\n        postId\r\n    }\r\n}\r\n\r\n\r\nexport default profileReducer;","const SEND_MESSAGE = \"SEND_MESSAGE\";\r\n\r\nlet initialState = {\r\n    messages: [\r\n        {id: 1, message: \"Hi!\"}, \r\n        {id: 2, message: \"How are you?\"}, \r\n        {id: 3, message: \"I am fine\"}, \r\n        {id: 4, message: \"Thanks\"}, \r\n        {id: 5, message: \"Great\"}, \r\n        {id: 6, message: \"See you\"}\r\n    ],\r\n    dialogs: [\r\n        {id: 1, name: \"Julia\"}, \r\n        {id: 2, name: \"Dasha\"}, \r\n        {id: 3, name: \"Pasha\"}, \r\n        {id: 4, name: \"Seva\"}, \r\n        {id: 5, name: \"Valera\"}, \r\n        {id: 6, name: \"Yura\"}\r\n    ]\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n\r\n    switch(action.type) {\r\n        case SEND_MESSAGE:\r\n            let newMessageText = action.newMessage;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 6, message: newMessageText}]\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendMessageCreator = (newMessage) => {\r\n    return {\r\n        type: SEND_MESSAGE, newMessage\r\n    }\r\n}\r\n\r\nexport default dialogsReducer;"],"sourceRoot":""}