{"version":3,"sources":["hoc/withAuthRedirect.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","Post","className","s","item","message","likeCount","MyPosts","memo","postsElements","posts","map","p","likesCount","createRef","AddNewPostFormRedux","onSubmit","values","addPost","newPostText","maxLength10","maxLengthCreator","reduxForm","form","handleSubmit","addPostBlock","Field","name","component","Textarea","validate","requiredField","placeholder","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","onBlur","updateStatus","autoFocus","ProfileInfo","profile","descriptionBlock","src","photos","large","alt","profileTitle","fullName","profileStatus","Preloader","MyPostsContainer","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","match","params","authorisedUserId","history","push","getUserProfile","getStatus","compose","withRouter"],"mappings":"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","file":"static/js/3.17895a1f.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={'/Login'}/>;\r\n\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__14Dqx\",\"profileCover\":\"ProfileInfo_profileCover__1jcAm\",\"profileTitle\":\"ProfileInfo_profileTitle__3CsZA\",\"profileStatus\":\"ProfileInfo_profileStatus__3tcFg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addPostBlock\":\"MyPosts_addPostBlock__2L7mi\",\"posts\":\"MyPosts_posts__Fhsox\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1736Q\"};","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n        { props.message }\r\n        <br/> Likes { props.likeCount }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport s from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport {\r\n  updateNewPostTextActionCreator,\r\n  addPostActionCreator\r\n} from \"./../../../redux/profile-reducer\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport {\r\n  requiredField,\r\n  maxLengthCreator\r\n} from \"../../../utils/validators/validatots\";\r\nimport { Textarea } from \"../../common/FormsControls/FormControls\";\r\n\r\n// class MyPosts extends React.PureComponent {\r\n//   // shouldComponentUpdate(nextProps, nextState) {\r\n//   //   return nextProps != this.props || nextState != this.state;\r\n//   // }\r\n\r\n//   render() {\r\n//     let postsElements = this.props.posts.map(p => (\r\n//       <Post message={p.message} likeCount={p.likesCount} />\r\n//     ));\r\n\r\n//     let newPost = React.createRef();\r\n\r\n//     let onAddPost = values => {\r\n//       this.props.addPost(values.newPostText);\r\n//       // let text = newPost.current.value;\r\n//       // props.dispatch(addPostActionCreator());\r\n//       // newPost.current.value = \"\";\r\n//     };\r\n\r\n//     return (\r\n//       <div>\r\n//         <AddNewPostFormRedux onSubmit={onAddPost} />\r\n//         <div className={s.posts}>{postsElements}</div>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\nconst MyPosts = React.memo(props => {\r\n  let postsElements = props.posts.map(p => (\r\n    <Post message={p.message} likeCount={p.likesCount} />\r\n  ));\r\n\r\n  let newPost = React.createRef();\r\n\r\n  let onAddPost = values => {\r\n    props.addPost(values.newPostText);\r\n    // let text = newPost.current.value;\r\n    // props.dispatch(addPostActionCreator());\r\n    // newPost.current.value = \"\";\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <AddNewPostFormRedux onSubmit={onAddPost} />\r\n      <div className={s.posts}>{postsElements}</div>\r\n    </div>\r\n  );\r\n});\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nlet AddNewPostForm = props => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit} className={s.addPostBlock}>\r\n      <Field\r\n        name=\"newPostText\"\r\n        component={Textarea}\r\n        validate={[requiredField, maxLength10]}\r\n        placeholder=\"Post message\"\r\n      />{\" \"}\r\n      <br />\r\n      <button>Add post</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nlet AddNewPostFormRedux = reduxForm({ form: \"ProfileAddNewPostForm\" })(\r\n  AddNewPostForm\r\n);\r\n\r\nexport default MyPosts;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport s from \"./ProfileInfo.module.css\";\r\n\r\nconst ProfileStatusWithHooks = props => {\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(props.status);\r\n\r\n  useEffect(()=>{\r\n      setStatus(props.status)\r\n  }, [props.status]);\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true);\r\n  };\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status);\r\n  };\r\n\r\n  const onStatusChange = e => {\r\n    setStatus(e.currentTarget.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {!editMode && (\r\n        <div>\r\n          <span onDoubleClick={activateEditMode}>{props.status || \"---\"}</span>\r\n        </div>\r\n      )}\r\n      {editMode && (\r\n        <input\r\n          onChange={onStatusChange}\r\n          onBlur={deactivateEditMode}\r\n          autoFocus={true}\r\n          value={status}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import React from \"react\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n  if (!profile) {\r\n    return <Preloader />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {/* <div className={s.profileCover}>\r\n                <img src=\"https://helpx.adobe.com/content/dam/help/en/stock/how-to/visual-reverse-image-search/jcr_content/main-pars/image/visual-reverse-image-search-v2_intro.jpg\" />\r\n            </div> */}\r\n      <div className={s.descriptionBlock}>\r\n        <img src={profile.photos.large} alt=\"\" />\r\n        {/* <img src=\"https://thispersondoesnotexist.com/image\" alt=\"\"/> */}\r\n        <div>\r\n          <div className={s.profileTitle}>{profile.fullName}</div>\r\n\r\n          <div className={s.profileStatus}>\r\n            <ProfileStatusWithHooks\r\n              status={status}\r\n              updateStatus={updateStatus}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import React from 'react';\r\nimport {addPostActionCreator } from '../../../redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\nimport {connect} from 'react-redux';\r\n\r\n\r\n// const MyPostsContainer = (props) => {\r\n//     debugger;\r\n//     let state = props.store.getState();\r\n\r\n//     let addPost = () => {\r\n//         // props.addPost();\r\n//         // let text = newPost.current.value;\r\n//         props.store.dispatch(addPostActionCreator()); \r\n//         // newPost.current.value = \"\";\r\n//     }\r\n\r\n//     let onPostChange = (text) => {\r\n//         props.store.dispatch(updateNewPostTextActionCreator(text));\r\n//     }\r\n\r\n//     return (<MyPosts updateNewPostText={onPostChange} addPost={addPost} posts={state.profile.posts} newPostText={state.profile.newPostText}/>)\r\n// };\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profile.posts,\r\n        newPostText: state.profile.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToPtops = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText)); \r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToPtops)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from \"react\";\r\nimport s from \"./Profile.module.css\";\r\nimport MyPosts from \"./MyPosts/MyPosts\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = props => {\r\n  return (\r\n    <div>\r\n      <ProfileInfo\r\n        profile={props.profile}\r\n        status={props.status}\r\n        updateStatus={props.updateStatus}\r\n      />\r\n      <MyPostsContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n\r\n// posts={props.profile.posts} newPostText={props.profile.newPostText} dispatch={props.dispatch}\r\n","import React from \"react\";\r\nimport s from \"./Profile.module.css\";\r\nimport Profile from \"./Profile\";\r\nimport { connect } from \"react-redux\";\r\nimport * as axios from \"axios\";\r\nimport {\r\n  getUserProfile,\r\n  getStatus,\r\n  updateStatus\r\n} from \"../../redux/profile-reducer\";\r\nimport { withRouter, Redirect } from \"react-router-dom\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n  componentDidMount() {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.authorisedUserId;\r\n      if(!userId) {\r\n        this.props.history.push('/login')\r\n      }\r\n    }\r\n    this.props.getUserProfile(userId);\r\n    this.props.getStatus(userId);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Profile\r\n        {...this.props}\r\n        profile={this.props.profile}\r\n        status={this.props.status}\r\n        updateStatus={this.props.updateStatus}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nlet mapStateToProps = state => ({\r\n  profile: state.profile.profile,\r\n  status: state.profile.status,\r\n  authorisedUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth\r\n\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { getUserProfile, getStatus, updateStatus }),\r\n  withRouter\r\n  //withAuthRedirect\r\n)(ProfileContainer);\r\n\r\n// let AuthRedirectComponent = withAuthRedirect(ProfileContainer);\r\n\r\n// let WithUrlDataContainerComponent = withRouter(AuthRedirectComponent)\r\n\r\n// export default connect (mapStateToProps, {getUserProfile}) (WithUrlDataContainerComponent);\r\n\r\n// posts={props.profile.posts} newPostText={props.profile.newPostText} dispatch={props.dispatch}\r\n"],"sourceRoot":""}