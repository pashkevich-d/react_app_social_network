{"version":3,"sources":["components/Dialogs/Dialogs.module.css","hoc/withAuthRedirect.js","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/MessageItem.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","DialogItem","path","id","className","s","dialog","active","name","MessageItem","message","text","maxLengthCreator100","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","component","Textarea","validate","requiredField","Dialogs","messages","dialogsElements","dialogs","map","d","messagesElements","m","newMessage","dialogsItems","values","sendMessage","compose","dispatch","sendMessageCreator"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,+ICI/MC,EAA6B,SAACC,GAAD,MAAY,CACzCC,OAAQD,EAAME,KAAKD,SAIVE,EAAmB,SAACC,GAAe,IACtCC,EADqC,iLAGnC,OAAKC,KAAKC,MAAMN,OAET,kBAACG,EAAcE,KAAKC,OAFI,kBAAC,IAAD,CAAUC,GAAI,eAHV,GACXC,IAAML,WAStC,OAFqCM,YAAQX,EAARW,CAAoCL,K,sFCJ9DM,EAVI,SAACJ,GAChB,IAAIK,EAAO,YAAcL,EAAMM,GAE/B,OACI,yBAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,QAC/B,kBAAC,IAAD,CAAST,GAAII,GAAOL,EAAMW,QCWvBC,EAjBK,SAACZ,GACjB,OACI,6BACI,yBAAKO,UAAWC,IAAEK,SAAUb,EAAMc,Q,iDCqCxCC,EAAsBC,YAAiB,KAoBvCC,EAAsBC,YAAU,CAAEC,KAAM,wBAAlBD,EAlBL,SAAAlB,GACrB,OACE,0BAAMoB,SAAUpB,EAAMqB,cACpB,6BACE,kBAACC,EAAA,EAAD,CACEC,YAAY,qBACZC,UAAWC,IACXC,SAAU,CAACC,IAAeZ,GAC1BJ,KAAK,gBAGT,6BACE,6CAUOiB,EAtDC,SAAA5B,GAEd,IAAIP,EAAQO,EAAM6B,SAEdC,EAAkBrC,EAAMsC,QAAQC,KAAI,SAAAC,GAAC,OACvC,kBAAC,EAAD,CAAYtB,KAAMsB,EAAEtB,KAAML,GAAI2B,EAAE3B,QAE9B4B,EAAmBzC,EAAMoC,SAASG,KAAI,SAAAG,GAAC,OACzC,kBAAC,EAAD,CAAarB,KAAMqB,EAAEtB,aAGNpB,EAAM2C,WAMvB,OAAKpC,EAAMN,OAGT,yBAAKa,UAAWC,IAAEuB,SAChB,yBAAKxB,UAAWC,IAAE6B,cAAeP,GACjC,yBAAKvB,UAAWC,IAAEqB,UAChB,6BAAMK,IAER,kBAACjB,EAAD,CAAqBG,SAZN,SAAAkB,GACjBtC,EAAMuC,YAAYD,EAAOF,gBAGD,kBAAC,IAAD,CAAUnC,GAAI,Y,wBC2B3BuC,sBACbrC,aAlCoB,SAAAV,GACpB,MAAO,CACLoC,SAAUpC,EAAMoC,aAIK,SAAAY,GACvB,MAAO,CACLF,YAAa,SAAAH,GACXK,EAASC,YAAmBN,SA0BhCxC,IAFa4C,CAGbZ","file":"static/js/4.4c49145d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__nECPk\",\"dialogsItems\":\"Dialogs_dialogsItems__2XtVt\",\"active\":\"Dialogs_active__3wSZj\",\"dialog\":\"Dialogs_dialog__10iBC\",\"messages\":\"Dialogs_messages__l33av\",\"message\":\"Dialogs_message__2nDMy\"};","import React from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={'/Login'}/>;\r\n\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent\r\n}","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst DialogItem = (props) => {\r\n    let path = '/dialogs/' + props.id;\r\n\r\n    return (\r\n        <div className={s.dialog + ' ' + s.active}>\r\n            <NavLink to={path}>{props.name}</NavLink> \r\n        </div>\r\n    )\r\n};\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst MessageItem = (props) => {\r\n    return (\r\n        <div>\r\n            <div className={s.message}>{props.text}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst addMessage = () => {\r\n    return (\r\n        <div >\r\n         <textarea /> <br/>\r\n         <button >Add post</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MessageItem;","import React from \"react\";\r\nimport s from \"./Dialogs.module.css\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport MessageItem from \"./Message/MessageItem\";\r\nimport {\r\n  sendMessageCreator,\r\n  updateNewMessageCreator\r\n} from \"./../../redux/dialogs-reducer\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { Textarea } from \"../common/FormsControls/FormControls\";\r\nimport { requiredField, maxLengthCreator } from \"../../utils/validators/validatots\";\r\n\r\nconst Dialogs = props => {\r\n  // debugger;\r\n  let state = props.messages;\r\n\r\n  let dialogsElements = state.dialogs.map(d => (\r\n    <DialogItem name={d.name} id={d.id} />\r\n  ));\r\n  let messagesElements = state.messages.map(m => (\r\n    <MessageItem text={m.message} />\r\n  ));\r\n\r\n  let newMessage = state.newMessage;\r\n\r\n  let addNewMesage = values => {\r\n    props.sendMessage(values.newMessage);\r\n  };\r\n\r\n  if (!props.isAuth) return <Redirect to={\"/Login\"} />;\r\n\r\n  return (\r\n    <div className={s.dialogs}>\r\n      <div className={s.dialogsItems}>{dialogsElements}</div>\r\n      <div className={s.messages}>\r\n        <div>{messagesElements}</div>\r\n      </div>\r\n      <AddMessageFormRedux onSubmit={addNewMesage} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst maxLengthCreator100 = maxLengthCreator(100);\r\n\r\nconst AddMessageForm = props => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field\r\n          placeholder=\"Enter your message\"\r\n          component={Textarea}\r\n          validate={[requiredField, maxLengthCreator100]}\r\n          name=\"newMessage\"\r\n        />\r\n      </div>\r\n      <div>\r\n        <button>Send</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst AddMessageFormRedux = reduxForm({ form: \"dialogAddMessageForm\" })(\r\n  AddMessageForm\r\n);\r\n\r\nexport default Dialogs;\r\n","import React from \"react\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {\r\n  sendMessageCreator\r\n} from \"../../redux/dialogs-reducer\";\r\nimport { connect } from \"react-redux\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\n// const DialogsContainer = (props) => {\r\n//     return <StoreContext.Consumer>\r\n//         {store => {\r\n//             let onSendMessageClick = () => {\r\n//                 store.dispatch(sendMessageCreator());\r\n//             }\r\n//             let onNewMessageChange = (newMessage) => {\r\n//                 store.dispatch(updateNewMessageCreator(newMessage));\r\n//             }\r\n//             return <Dialogs updateNewMessage={onNewMessageChange} sendMessage={onSendMessageClick} messages={store.getState().messages}/>\r\n//         }\r\n//     }\r\n//     </StoreContext.Consumer>\r\n// }\r\n\r\nlet mapStateToProps = state => {\r\n  return {\r\n    messages: state.messages\r\n  };\r\n};\r\n\r\nlet mapDispatchToPtops = dispatch => {\r\n  return {\r\n    sendMessage: newMessage => {\r\n      dispatch(sendMessageCreator(newMessage));\r\n    }\r\n  };\r\n};\r\n\r\n// let AuthRedirectComponent = withAuthRedirect(Dialogs);\r\n\r\n// const DialogsContainer = connect(mapStateToProps, mapDispatchToPtops)(AuthRedirectComponent);\r\n\r\n// const DialogsContainer = (props) => {\r\n// // debugger;\r\n//     let state = props.store.getState().messages;\r\n\r\n//     let onSendMessageClick = () => {\r\n//         props.store.dispatch(sendMessageCreator());\r\n//     }\r\n\r\n//     let onNewMessageChange = (newMessage) => {\r\n//         props.store.dispatch(updateNewMessageCreator(newMessage));\r\n//     }\r\n\r\n//     return <Dialogs updateNewMessage={onNewMessageChange} sendMessage={onSendMessageClick} messages={state}/>\r\n// }\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToPtops),\r\n  withAuthRedirect\r\n)(Dialogs);\r\n"],"sourceRoot":""}